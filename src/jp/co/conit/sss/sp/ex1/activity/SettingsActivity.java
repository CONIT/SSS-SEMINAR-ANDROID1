/* * Copyright (C) 2012 CONIT Co., Ltd. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package jp.co.conit.sss.sp.ex1.activity;import jp.co.conit.sss.sp.ex1.R;import jp.co.conit.sss.sp.ex1.billing.BillingService;import jp.co.conit.sss.sp.ex1.billing.BillingService.RequestPurchase;import jp.co.conit.sss.sp.ex1.billing.BillingService.RestoreTransactions;import jp.co.conit.sss.sp.ex1.billing.Consts.ResponseCode;import jp.co.conit.sss.sp.ex1.billing.PurchaseDatabase;import jp.co.conit.sss.sp.ex1.billing.PurchaseObserver;import jp.co.conit.sss.sp.ex1.billing.ResponseHandler;import jp.co.conit.sss.sp.ex1.fragment.SettingsFragment;import jp.co.conit.sss.sp.ex1.fragment.SettingsFragment.OnRestoreLisntener;import jp.co.conit.sss.sp.ex1.util.HttpUtil;import android.os.Bundle;import android.os.Handler;import android.support.v4.app.FragmentActivity;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentTransaction;import android.widget.Toast;/** * アプリケーションの設定（リストア）を行うアクティビティです。 *  * @author conit */public class SettingsActivity extends FragmentActivity implements OnRestoreLisntener {    private RestoreObserver mRestoreObserver;    private Handler mHandler;    private BillingService mBillingService;    private class RestoreObserver extends PurchaseObserver {        public RestoreObserver(Handler handler) {            super(SettingsActivity.this, handler);        }        @Override        public void onBillingSupported(boolean supported) {        }        @Override        public void onPurchaseStateChange(String producId, String receipt, long purchaseTime) {        }        @Override        public void onRequestPurchaseResponse(RequestPurchase request, ResponseCode responseCode) {        }        @Override        public void onRestoreTransactionsResponse(RestoreTransactions request,                ResponseCode responseCode) {            if (responseCode == ResponseCode.RESULT_OK) {                Toast.makeText(getApplicationContext(), getString(R.string.restore_ok),                        Toast.LENGTH_SHORT).show();            } else {                Toast.makeText(getApplicationContext(), getString(R.string.restore_ng),                        Toast.LENGTH_SHORT).show();            }        }    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_settings);        FragmentManager fm = getSupportFragmentManager();        FragmentTransaction transaction = fm.beginTransaction();        SettingsFragment fragment = SettingsFragment.newInstance();        transaction.replace(R.id.frame_settings, fragment);        transaction.commit();    }    /**     * In App-Billingの初期化処理です。     */    private void initBilling() {        mHandler = new Handler();        mRestoreObserver = new RestoreObserver(mHandler);        mBillingService = new BillingService();        mBillingService.setContext(this);        // Check if billing is supported.        ResponseHandler.register(mRestoreObserver);    }    @Override    public void onRestore() {        // 購入情報削除        PurchaseDatabase purchaseDatabase = new PurchaseDatabase(SettingsActivity.this);        boolean isSuccess = purchaseDatabase.deleteAll();        if (!isSuccess) {            Toast.makeText(getApplicationContext(), getString(R.string.restore_ng),                    Toast.LENGTH_SHORT).show();            return;        }        if (HttpUtil.isConnected(getApplicationContext())) {            initBilling();            // リストア            mBillingService.restoreTransactions();            Toast.makeText(getApplicationContext(), getString(R.string.restore_start),                    Toast.LENGTH_SHORT).show();        } else {            Toast.makeText(getApplicationContext(), getString(R.string.restore_ng),                    Toast.LENGTH_SHORT).show();        }    }}