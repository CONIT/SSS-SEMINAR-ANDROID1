/* * Copyright (C) 2012 CONIT Co., Ltd. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *      http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package jp.co.conit.sss.sp.ex1.fragment;import java.util.List;import android.widget.TextView;/** * ViewPagerFragmentで使用するViewPagerのインジケーターを管理するクラスです。 *  * @author conit */public class IndicatorManager {    private List<TextView> mIndicatorTextViewList;    private List<String> mIndicatorPageTitleList;    public IndicatorManager(List<TextView> indicatorTextList, List<String> indicatorPageTitleList) {        this(indicatorTextList, indicatorPageTitleList, 0);    }    public IndicatorManager(List<TextView> indicatorTextList, List<String> indicatorPageTitleList,            int position) {        mIndicatorTextViewList = indicatorTextList;        mIndicatorPageTitleList = indicatorPageTitleList;        if (getPageTitleCount() < (position + 1)) {            throw new IllegalArgumentException("position exceeded the number of pages");        }        if (position < 0) {            throw new IllegalArgumentException("position  must not be less than 0 ");        }        update(position);    }    private int getPageTitleCount() {        return mIndicatorPageTitleList.size();    }    /**     * @param position     */    public void update(int position) {        if (position == 0) {            mIndicatorTextViewList.get(0).setText("");            mIndicatorTextViewList.get(1).setText(mIndicatorPageTitleList.get(position));            mIndicatorTextViewList.get(2).setText(mIndicatorPageTitleList.get(position + 1));        } else if (position == getPageTitleCount() - 1) {            mIndicatorTextViewList.get(0).setText(mIndicatorPageTitleList.get(position - 1));            mIndicatorTextViewList.get(1).setText(mIndicatorPageTitleList.get(position));            mIndicatorTextViewList.get(2).setText("");        } else {            mIndicatorTextViewList.get(0).setText(mIndicatorPageTitleList.get(position - 1));            mIndicatorTextViewList.get(1).setText(mIndicatorPageTitleList.get(position));            mIndicatorTextViewList.get(2).setText(mIndicatorPageTitleList.get(position + 1));        }    }}